HOTSPRINGS
{
  name = HotSprings
  author = Angel-125
  title = Hot Springs Geothermal Plant
  TechRequired = largeElectrics
  shortName = Hot Springs
  description = large bases need lots of power, and the Hot Springs Geothermal Plant delivers. Not for use as a spa. Mind the heat...
  mass = 7.5
  rocketParts = 3000
  reconfigureSkill = Engineer
  logoPanel = WildBlueIndustries/Pathfinder/Decals/HotSprings
  glowPanel = WildBlueIndustries/Pathfinder/Decals/HotSpringsGlow
  toolTip = The Hot Springs Geothermal Plant taps into the celestial body's geothermal gradient. It might need to dig deep, which is why it's maintennance intensive. And if it breaks you'll lose power and have to do an EVA to effect repairs.
  toolTipTitle = Your First Hot Springs!
  
	MODULE
	{
		name = ModuleOverheatDisplay
	}

	MODULE
	{
		name = ModuleResourceHarvester
		HarvesterType = 0
		Efficiency = 1.5
		ResourceName = GeoEnergy
		ConverterName = Geothermal Tap
		StartActionName = Start Geothermal Tap
		StopActionName = Stop Geothermal Tap
		ImpactTransform = ImpactTransform
		ImpactRange = 5
		AutoShutdown = true
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		Specialty = Engineer
		EfficiencyBonus = 1
		GeneratesHeat = true
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 15
		}
		TemperatureModifier
		{
			key = 0 10000
			key = 250 7500
			key = 500 5000
			key = 750 500
			key = 1000 0
		}		
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		Specialty = Engineer
		EfficiencyBonus = 1
		ThermalEfficiency 
		{
			key = 0 0.1
			key = 250 .1
			key = 500 1
			key = 750 .1
			key = 1000 0
		}
	}

	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 500					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.25		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.05		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 1000				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 100					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}

	MODULE
	{
		name = WBIGeoThermalPlant
		ConverterName = Geothermal Power
		StartActionName = Geothermal Power On
		StopActionName = Geothermal Power Off
		AutoShutdown = false 
		GeneratesHeat = false //TODO: figure out how ModuleResourceConverter generates heat
		hoursPerCycle = 36 //Six days
		minimumSuccess = 40
		criticalSuccess = 95
		criticalFail = 20 //If the plant suffers a critical failure then it will break down and stop generating power.
		criticalFailModifier = 2 //Each time the plant fails is power check, the critical fail goes up by this number.
		repairSkill = Engineer
		repairResource = RocketParts
		repairAmount = 500
		showGUI = false
		efficiencyType = industry
		harvestType = 0

		//You need a minimum amount of Water to function
		REQUIRED_RESOURCE
		{
			ResourceName = Water
			Ratio = 500
		}

		//A small amount of GeoEnergy gets consumed in the process
		INPUT_RESOURCE
		{
			ResourceName = GeoEnergy
			Ratio = 1
		}

		//A small amount of Water gets consumed in the process
		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = .0001
		}

		//This reflects a net result of EC, input EC is already factored in
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 175
		}   
	}

	RESOURCE
	{
		name = Water
		amount = 0
		maxAmount = 550
	}

	RESOURCE
	{
		name = GeoEnergy
		amount = 0
		maxAmount = 1.0
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 2000
		maxAmount = 2000
		isTweakable = false
	}

}